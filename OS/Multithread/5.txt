2.1.15线程调度和线程库函数
    下面的libthread函数影响线程调度
2.1.15.1 thr_setprio()和thr_getprio()
    这两个函数用来改变和检索target_thread的优先级，这个优先级在用户级线

程库调度线程时被引用，但与操作系统调度LWP的优先级无关。
    这个优先级影响线程和LWP的结合--如果可运行的线程比LWP多的时候，高优
先级的线程得到LWP。线程的调度是"专横"的，就是说，如果有一个高优先级的线

程得不到空闲的LWP，而一个低优先级的线程占有一个LWP，则低优先级的线程被
迫将LWP让给高优先级的线程。
2.1.15.2 thr_suspend()和thr_continue()
    这两个函数控制线程是否被允许运行。调用thr_suspend()，可以把线程设置

为挂起状态。就是说，该线程被搁置，即使有可用的LWP。在其他线程以该线程为

参数调用thr_continue后，线程退出挂起状态。这两个函数应当小心使用--它们
的结果也许是危险的。例如，被挂起的线程也许是处在互锁状态的，将它挂起可
能会导致死锁。
    一个线程可以在创建时用THR_SUSPENDED标志设置为挂起。
2.1.15.3 thr_yield()
    Thr_yield函数使线程在相同优先级的线程退出挂起状态后交出LWP。（不会有

更高优先级的线程可运行而没有运行，因为它会通过强制的方式取得LWP）。这个

函数具有非常重要的意义，因为在LWP上没有分时的概念（尽管操作系统在执行
LWP
时有分时）。
    最后，应当注意priocntl(2)也会影响线程调度。更详细的内容请参照"LWP和

调度等级"。
